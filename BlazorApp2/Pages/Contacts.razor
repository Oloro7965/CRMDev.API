@page "/Contacts"
@using System.Text.Json
@using System.Text.Json.Serialization
@using BlazorApp2.Models

@inject HttpClient Http

@if(contacts is not null && contacts.Count==0){
    <p>No Contacts were found</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Occupation</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in contacts)
            {
                <tr>
                    <td>@c.name</td>
                    <td>@c.email</td>
                    <td>@c.phoneNumber</td>
                    <td>@c.occupation</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private bool result;
    //private Contacts[]? Contacts;
    private List<Contact> contacts;
    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("/api/Contacts");
        //var res = await response.Content.ReadAsStringAsync();
        var json = await response.Content.ReadAsStringAsync();

        var contact = JsonSerializer.Deserialize<ResultViewModel<List<Contact>>>(json, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
        //var res = await response.Content.ReadAsStringAsync();
        //Console.WriteLine($"{res}");
        contacts = contact.Data;

    }
    public class Contact
    {

        //[System.Text.Json.Serialization.JsonPropertyName("name")]
        //public string Name { get; set; }
        [JsonPropertyName("name")]
        public string name { get; set; }

        [JsonPropertyName("email")]
        public string email { get;  set; }
        //public string Password { get; private set; }

        [JsonPropertyName("phoneNumber")]
        public string phoneNumber { get;  set; }

        [JsonPropertyName("occupation")]
        public string occupation { get;  set; }

}
}